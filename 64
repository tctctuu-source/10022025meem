import React, { useRef, useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { toPng } from 'html-to-image';
import { X, Download, Loader2 } from 'lucide-react';
import { ResultPoster } from '../types';
import ResultPosterCard from './ResultPosterCard';

interface PosterDownloadModalProps {
  isOpen: boolean;
  onClose: () => void;
  poster: ResultPoster | null;
}

const PosterDownloadModal: React.FC<PosterDownloadModalProps> = ({ isOpen, onClose, poster }) => {
  const posterRef = useRef<HTMLDivElement>(null);
  const [isDownloading, setIsDownloading] = useState(false);

  const handleDownload = async () => {
    if (!posterRef.current) return;
    setIsDownloading(true);
    try {
      const dataUrl = await toPng(posterRef.current, {
        cacheBust: true,
        quality: 1.0,
        pixelRatio: 2, // For higher resolution
      });
      const link = document.createElement('a');
      link.download = `muhimmath-result-${poster?.competition_name.toLowerCase().replace(/\s/g, '-')}.png`;
      link.href = dataUrl;
      link.click();
    } catch (err) {
      console.error('Failed to download image', err);
      alert('Sorry, there was an error downloading the poster.');
    } finally {
      setIsDownloading(false);
    }
  };

  if (!poster) return null;

  return (
    <AnimatePresence>
      {isOpen && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          className="fixed inset-0 bg-black bg-opacity-80 z-50 flex items-center justify-center p-4"
          onClick={onClose}
        >
          <motion.div
            initial={{ scale: 0.9, y: 20 }}
            animate={{ scale: 1, y: 0 }}
            exit={{ scale: 0.9, y: 20 }}
            className="bg-ui-surface rounded-2xl w-full max-w-2xl flex flex-col overflow-hidden"
            onClick={(e) => e.stopPropagation()}
          >
            <div className="p-6 border-b border-black/10 flex justify-between items-center">
                <h3 className="text-lg font-bold text-ui-text-primary">Download Poster</h3>
                <button onClick={onClose} className="text-ui-text-secondary hover:text-ui-text-primary"><X size={24} /></button>
            </div>
            
            <div className="bg-ui-background p-4 sm:p-8 flex items-center justify-center">
              <div ref={posterRef} className="w-[350px] h-[500px] sm:w-[400px] sm:h-[550px]">
                <ResultPosterCard poster={poster} />
              </div>
            </div>
            
            <div className="p-6 bg-ui-surface">
              <button
                onClick={handleDownload}
                disabled={isDownloading}
                className="w-full bg-brand-coral text-brand-dark-blue font-bold py-3 px-4 rounded-lg flex items-center justify-center gap-2 hover:bg-opacity-90 transition-colors disabled:opacity-50"
              >
                {isDownloading ? <Loader2 className="w-5 h-5 animate-spin" /> : <Download className="w-5 h-5" />}
                {isDownloading ? 'Generating Image...' : 'Download as PNG'}
              </button>
            </div>
          </motion.div>
        </motion.div>
      )}
    </AnimatePresence>
  );
};

export default PosterDownloadModal;
